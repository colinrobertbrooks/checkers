{"version":3,"sources":["types/piece.ts","types/position.ts","types/square.ts","utils/move.ts","utils/square.ts","utils/piece.ts","constants/board.ts","constants/pieces.ts","components/Score.tsx","components/board.ts","hooks/useResizeObserver.ts","hooks/useRect.ts","components/Square.tsx","images/piece/black-king.png","images/piece/black.png","images/piece/red-king.png","images/piece/red.png","components/Piece.tsx","components/Reset.tsx","components/App.tsx","index.tsx"],"names":["PieceFill","Position","SquareFill","decodeX","position","split","indexOf","decodeY","Number","getCoordinates","fromPosition","toPosition","from","x","y","to","getIsKing","movedPiece","toY","fill","Black","makeDarkSquare","Dark","makeLightSquare","Light","makeRedPiece","attributes","Red","makeBlackPiece","makeEvenRow","positions","makeOddRow","board","A8","B8","C8","D8","E8","F8","G8","H8","A7","B7","C7","D7","E7","F7","G7","H7","A6","B6","C6","D6","E6","F6","G6","H6","A5","B5","C5","D5","E5","F5","G5","H5","A4","B4","C4","D4","E4","F4","G4","H4","A3","B3","C3","D3","E3","F3","G3","H3","A2","B2","C2","D2","E2","F2","G2","H2","A1","B1","C1","D1","E1","F1","G1","H1","initialPieces","id","isKing","Score","_ref","countBlack","countRed","_jsxs","className","children","_jsx","BoardContainer","styled","div","_templateObject","_taggedTemplateLiteral","BoardRow","_templateObject2","emptyRect","width","height","top","right","bottom","left","useRect","ref","rect","setRect","useState","handleResize","useCallback","current","getBoundingClientRect","useResizeObserver","callback","ro","useRef","observe","ResizeObserver","disconnect","_ro$current","useLayoutEffect","Wrapper","Square","wrapperRef","minHeight","isDarkFill","backgroundColor","style","getSrc","blackKingSrc","blackSrc","redKingSrc","redSrc","Piece","props","src","alt","Reset","reset","onClick","App","pieces","setPieces","countPieces","filter","p","length","getPiece","find","piece","updatePiece","updates","currentPieces","currentPiece","DragDropContext","onDragEnd","result","destination","source","droppableId","moveIsValid","validateMove","Math","abs","yIsDescending","getIsDescending","jumpedPosition","getJumpedPosition","encodeX","concat","jumpedPiece","jumpedPieceIsAnOpponent","map","row","rowIdx","square","Droppable","isDropDisabled","_ref2","innerRef","droppableInnerRef","droppableProps","placeholder","droppablePlaceholder","Draggable","draggableId","String","index","_ref3","draggableInnerRef","draggableProps","dragHandleProps","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"8LAEO,IAAKA,ECFAC,ECEAC,GFGX,SAHWF,OAAS,iBAATA,IAAS,aAGpB,CAHWA,MAAS,KC+DpB,SAjiEnB,CAjEWA,MAAQ,KCKnB,SAHWC,OAAU,eAAVA,IAAU,iBAGrB,CAHWA,MAAU,KCAtB,MAEMC,EAAWC,GACf,WAAWC,MAAM,IAAIC,QAAQF,EAASC,MAAM,IAAI,IAE5CE,EAAWH,GAA+BI,OAAOJ,EAASC,MAAM,IAAI,IAEpEI,EAAiBA,CAACC,EAAwBC,KAAoB,CAClEC,KAAM,CACJC,EAAGV,EAAQO,GACXI,EAAGP,EAAQG,IAEbK,GAAI,CACFF,EAAGV,EAAQQ,GACXG,EAAGP,EAAQI,MAyCFK,EAAYA,CACvBL,EACAM,KAEA,MAAMC,EAAMX,EAAQI,GACpB,OAAIM,EAAWE,OAASnB,EAAUoB,MAAsB,IAARF,EACjC,IAARA,CAAS,EC7DLG,EAAkBjB,IAAkB,CAC/Ce,KAAMjB,EAAWoB,KACjBlB,aAGWmB,EAAmBnB,IAAkB,CAChDe,KAAMjB,EAAWsB,MACjBpB,aCLWqB,EAAgBC,IAA6B,CACxDP,KAAMnB,EAAU2B,OACbD,IAGQE,EAAkBF,IAA6B,CAC1DP,KAAMnB,EAAUoB,SACbM,ICRCG,EAAeC,GAAqC,CACxDP,EAAgBO,EAAU,IAC1BT,EAAeS,EAAU,IACzBP,EAAgBO,EAAU,IAC1BT,EAAeS,EAAU,IACzBP,EAAgBO,EAAU,IAC1BT,EAAeS,EAAU,IACzBP,EAAgBO,EAAU,IAC1BT,EAAeS,EAAU,KAGrBC,EAAcD,GAAqC,CACvDT,EAAeS,EAAU,IACzBP,EAAgBO,EAAU,IAC1BT,EAAeS,EAAU,IACzBP,EAAgBO,EAAU,IAC1BT,EAAeS,EAAU,IACzBP,EAAgBO,EAAU,IAC1BT,EAAeS,EAAU,IACzBP,EAAgBO,EAAU,KAGfE,EAAgB,CAC3BH,EAAY,CACV5B,EAASgC,GACThC,EAASiC,GACTjC,EAASkC,GACTlC,EAASmC,GACTnC,EAASoC,GACTpC,EAASqC,GACTrC,EAASsC,GACTtC,EAASuC,KAEXT,EAAW,CACT9B,EAASwC,GACTxC,EAASyC,GACTzC,EAAS0C,GACT1C,EAAS2C,GACT3C,EAAS4C,GACT5C,EAAS6C,GACT7C,EAAS8C,GACT9C,EAAS+C,KAEXnB,EAAY,CACV5B,EAASgD,GACThD,EAASiD,GACTjD,EAASkD,GACTlD,EAASmD,GACTnD,EAASoD,GACTpD,EAASqD,GACTrD,EAASsD,GACTtD,EAASuD,KAEXzB,EAAW,CACT9B,EAASwD,GACTxD,EAASyD,GACTzD,EAAS0D,GACT1D,EAAS2D,GACT3D,EAAS4D,GACT5D,EAAS6D,GACT7D,EAAS8D,GACT9D,EAAS+D,KAEXnC,EAAY,CACV5B,EAASgE,GACThE,EAASiE,GACTjE,EAASkE,GACTlE,EAASmE,GACTnE,EAASoE,GACTpE,EAASqE,GACTrE,EAASsE,GACTtE,EAASuE,KAEXzC,EAAW,CACT9B,EAASwE,GACTxE,EAASyE,GACTzE,EAAS0E,GACT1E,EAAS2E,GACT3E,EAAS4E,GACT5E,EAAS6E,GACT7E,EAAS8E,GACT9E,EAAS+E,KAEXnD,EAAY,CACV5B,EAASgF,GACThF,EAASiF,GACTjF,EAASkF,GACTlF,EAASmF,GACTnF,EAASoF,GACTpF,EAASqF,GACTrF,EAASsF,GACTtF,EAASuF,KAEXzD,EAAW,CACT9B,EAASwF,GACTxF,EAASyF,GACTzF,EAAS0F,GACT1F,EAAS2F,GACT3F,EAAS4F,GACT5F,EAAS6F,GACT7F,EAAS8F,GACT9F,EAAS+F,MCnGAC,EAA0B,CAIrCrE,EAAe,CACbsE,GAAI,EACJ9F,SAAUH,EAASiC,GACnBiE,QAAQ,IAEVvE,EAAe,CACbsE,GAAI,EACJ9F,SAAUH,EAASmC,GACnB+D,QAAQ,IAEVvE,EAAe,CACbsE,GAAI,EACJ9F,SAAUH,EAASqC,GACnB6D,QAAQ,IAEVvE,EAAe,CACbsE,GAAI,EACJ9F,SAAUH,EAASuC,GACnB2D,QAAQ,IAEVvE,EAAe,CACbsE,GAAI,EACJ9F,SAAUH,EAASwC,GACnB0D,QAAQ,IAEVvE,EAAe,CACbsE,GAAI,EACJ9F,SAAUH,EAAS0C,GACnBwD,QAAQ,IAEVvE,EAAe,CACbsE,GAAI,EACJ9F,SAAUH,EAAS4C,GACnBsD,QAAQ,IAEVvE,EAAe,CACbsE,GAAI,EACJ9F,SAAUH,EAAS8C,GACnBoD,QAAQ,IAEVvE,EAAe,CACbsE,GAAI,EACJ9F,SAAUH,EAASiD,GACnBiD,QAAQ,IAEVvE,EAAe,CACbsE,GAAI,GACJ9F,SAAUH,EAASmD,GACnB+C,QAAQ,IAEVvE,EAAe,CACbsE,GAAI,GACJ9F,SAAUH,EAASuD,GACnB2C,QAAQ,IAEVvE,EAAe,CACbsE,GAAI,GACJ9F,SAAUH,EAASqD,GACnB6C,QAAQ,IAKV1E,EAAa,CACXyE,GAAI,GACJ9F,SAAUH,EAASwE,GACnB0B,QAAQ,IAEV1E,EAAa,CACXyE,GAAI,GACJ9F,SAAUH,EAAS0E,GACnBwB,QAAQ,IAEV1E,EAAa,CACXyE,GAAI,GACJ9F,SAAUH,EAAS4E,GACnBsB,QAAQ,IAEV1E,EAAa,CACXyE,GAAI,GACJ9F,SAAUH,EAAS8E,GACnBoB,QAAQ,IAEV1E,EAAa,CACXyE,GAAI,GACJ9F,SAAUH,EAASiF,GACnBiB,QAAQ,IAEV1E,EAAa,CACXyE,GAAI,GACJ9F,SAAUH,EAASmF,GACnBe,QAAQ,IAEV1E,EAAa,CACXyE,GAAI,GACJ9F,SAAUH,EAASqF,GACnBa,QAAQ,IAEV1E,EAAa,CACXyE,GAAI,GACJ9F,SAAUH,EAASuF,GACnBW,QAAQ,IAEV1E,EAAa,CACXyE,GAAI,GACJ9F,SAAUH,EAASwF,GACnBU,QAAQ,IAEV1E,EAAa,CACXyE,GAAI,GACJ9F,SAAUH,EAAS0F,GACnBQ,QAAQ,IAEV1E,EAAa,CACXyE,GAAI,GACJ9F,SAAUH,EAAS4F,GACnBM,QAAQ,IAEV1E,EAAa,CACXyE,GAAI,GACJ9F,SAAUH,EAAS8F,GACnBI,QAAQ,K,WChHGC,I,IAAAA,EAXDC,IAAA,IAAC,WAAEC,EAAU,SAAEC,GAAuBF,EAAA,OAClDG,eAAA,OAAKC,UAAU,uBAAsBC,SAAA,CACnCF,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,UAAAD,SAAQ,WAAe,IDPe,GCOkBH,KAE1DC,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,UAAAD,SAAQ,SAAa,IDViB,GCUgBJ,OAEpD,E,cCbD,MAAMM,EAAiBC,IAAOC,IAAGC,MAAAC,YAAA,sEAM3BC,EAAWJ,IAAOC,IAAGI,MAAAF,YAAA,qE,YCC3B,MCNDG,EAAwB,CAC5BC,MAAO,EACPC,OAAQ,EACRC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,GAGKC,EACXC,IAEA,MAAOC,EAAMC,GAAWC,mBAAqBX,GAEvCY,EAAeC,uBAAY,KAC3BL,EAAIM,SAASJ,EAAQF,EAAIM,QAAQC,wBAAwB,GAC5D,CAACP,IAIJ,MDd+BQ,EAC/BR,EACAS,KAEA,MAAMC,EAAKC,iBAA8B,MAEnCC,EAAUP,uBAAY,KAC1BK,EAAGJ,QAAU,IAAIO,IAAeJ,GAC5BT,EAAIM,SAASI,EAAGJ,QAAQM,QAAQZ,EAAIM,QAAQ,GAC/C,CAACG,EAAUT,IAERc,EAAaT,uBAAY,SAAAU,EAAA,OAAgB,QAAhBA,EAAML,EAAGJ,eAAO,IAAAS,OAAA,EAAVA,EAAYD,YAAY,GAAE,IAE/DE,2BAAgB,KACdJ,IACO,IAAME,MACZ,CAACF,EAASE,GAAY,ECJzBN,CAAkBR,EAAKI,GAEhBH,CAAI,E,MChBb,MAaMgB,EAAU/B,IAAOC,IAAGC,MAAAC,YAAA,6HAQX6B,MArBwBxC,IAAyB,IAAxB,KAAElF,EAAI,SAAEuF,GAAUL,EACxD,MAAMyC,EAAaR,iBAAO,OAClBlB,MAAO2B,GAAcrB,EAAQoB,GAC/BE,EAAa7H,IAASjB,EAAWoB,KACjC2H,EAAkBD,EAAa,WAAa,QAElD,OACErC,cAACiC,EAAO,CAACjB,IAAKmB,EAAYI,MAAO,CAAEH,YAAWE,mBAAkBvC,SAC7DsC,EAAatC,EAAW,MACjB,EChBC,MAA0B,uCCA1B,MAA0B,kCCA1B,MAA0B,qCCA1B,MAA0B,gCCQzC,MAAMyC,EAAS9C,IAA4C,IAA3C,KAAElF,EAAI,OAAEgF,GAAqBE,EAC3C,OAAIlF,IAASnB,EAAUoB,MAAc+E,EAASiD,EAAeC,EACtDlD,EAASmD,EAAaC,CAAM,EAStBC,MANAC,GACb9C,cAAA,OAAKF,UAAU,MAAKC,SAClBC,cAAA,OAAKF,UAAU,YAAYiD,IAAKP,EAAOM,GAAQE,IAAI,YCDxCC,MAVDvD,IAAA,IAAC,MAAEwD,GAAoBxD,EAAA,OACnCM,cAAA,OAAKF,UAAU,4BAA2BC,SACxCC,cAAA,OAAKF,UAAU,SAAQC,SACrBC,cAAA,UAAQF,UAAU,aAAaqD,QAASD,EAAMnD,SAAC,aAI7C,EC+IOqD,MAzIHA,KAIV,MAAOC,EAAQC,GAAanC,mBAAmB7B,GAEzCiE,EAAe/I,GACnB6I,EAAOG,QAAQC,GAAMA,EAAEjJ,OAASA,GAAuB,OAAfiJ,EAAEhK,WAAmBiK,OAEzDC,EAAYlK,GAChB4J,EAAOO,MAAMC,GAAUA,EAAMpK,WAAaA,IAEtCqK,EAAcA,CAACvE,EAAYwE,IAC/BT,GAAWU,IACT,MAAMC,EAAeD,EAAcJ,MAAMH,GAAMA,EAAElE,KAAOA,IACxD,MAAO,IACFyE,EAAcR,QAAQC,GAAMA,EAAElE,KAAOA,IACxC,IACK0E,KACAF,GAEN,IAsDL,OACElE,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAIF,UAAU,wBAAuBC,SAAC,aACtCC,cAACP,EAAK,CACJE,WAAY4D,EAAYlK,EAAUoB,OAClCmF,SAAU2D,EAAYlK,EAAU2B,OAElCgF,cAACkE,IAAe,CAACC,UAvDDC,IAClB,IAAKA,EAAOC,YAAa,OAEzB,MAAMtK,EAAeqK,EAAOE,OAAOC,YAC7BvK,EAAaoK,EAAOC,YAAYE,YAChCjK,EAAaqJ,EAAS5J,GAKtByK,EhBhCkBC,EAC1B1K,EACAC,EACAM,KAEA,MAAM,KAAEL,EAAI,GAAEG,GAAON,EAAeC,EAAcC,GAGlD,GAAI0K,KAAKC,IAAI1K,EAAKE,EAAIC,EAAGD,GAAK,EAAG,OAAO,EAIxC,GADmBuK,KAAKC,IAAI1K,EAAKC,EAAIE,EAAGF,KAAOwK,KAAKC,IAAI1K,EAAKE,EAAIC,EAAGD,GACnD,OAAO,EAGxB,GAAIG,EAAWkF,OAAQ,OAAO,EAG9B,MAAMoF,EApBgBC,EAAC5K,EAAcG,IAAeH,EAAOG,EAoBrCyK,CAAgB5K,EAAKE,EAAGC,EAAGD,GACjD,OAAOG,EAAWE,OAASnB,EAAUoB,MAAQmK,GAAiBA,CAAa,EgBarDH,CAAa1K,EAAcC,EAAYM,GAC3D,IAAKkK,EAAa,OAMlB,GADuBb,EAAS3J,GACZ,OAKpB,MAAM8K,EhBtBuBC,EAC/BhL,EACAC,KAEA,MAAM,KAAEC,EAAI,GAAEG,GAAON,EAAeC,EAAcC,GAElD,GAAgC,IAA5B0K,KAAKC,IAAI1K,EAAKE,EAAIC,EAAGD,GAAU,OAAO,KAE1C,MAAMD,EAlDSA,IAAsB,WAAWR,MAAM,IAAIQ,GAkDhD8K,EAAS/K,EAAKC,EAAIE,EAAGF,GAAK,GAC9BC,GAAKF,EAAKE,EAAIC,EAAGD,GAAK,EAC5B,MAAM,GAAN8K,OAAU/K,GAAC+K,OAAG9K,EAAC,EgBYU4K,CAAkBhL,EAAcC,GACjDkL,EAAcJ,GAAkBnB,EAASmB,GACzCK,EACJD,GAAeA,EAAY1K,OAASF,EAAWE,KAGjD,OAAIsK,IAAmBI,GAGnBA,IAAgBC,EAHuB,MAS3CrB,EAAYxJ,EAAWiF,GAAI,CACzB9F,SAAUO,EACVwF,OAAQlF,EAAWkF,QAAUnF,EAAUL,EAAYM,UAIjD4K,GAAeC,GACjBrB,EAAYoB,EAAY3F,GAAI,CAAE9F,SAAU,QAC1C,EAUyCsG,SACrCC,cAACC,EAAc,CAAAF,SACZ1E,EAAM+J,KAAI,CAACC,EAAKC,IACftF,cAACM,EAAQ,CAAAP,SACNsF,EAAID,KAAI1F,IAA8B,IAA7B,SAAEjG,KAAa8L,GAAQ7F,EAC/B,MAAMmE,EAAQF,EAASlK,GACvB,OACEuG,cAACkC,EAAM,CAAgB1H,KAAM+K,EAAO/K,KAAKuF,SACvCC,cAACwF,IAAS,CAACjB,YAAa9K,EAAUgM,iBAAkB5B,EAAM9D,SACvD2F,IAAA,IACCC,SAAUC,EAAiB,eAC3BC,EACAC,YAAaC,GACdL,EAAA,OACC7F,eAAA,OAAKmB,IAAK4E,KAAuBC,EAAc9F,SAAA,CAC5C8D,GACC7D,cAACgG,IAAS,CAERC,YAAaC,OAAOrC,EAAMtE,IAC1B4G,MAAO,EAAEpG,SAERqG,IAAA,IACCT,SAAUU,EAAiB,eAC3BC,EAAc,gBACdC,GACDH,EAAA,OACCpG,cAAA,OACEgB,IAAKqF,KACDC,KACAC,EAAexG,SAEnBC,cAAC6C,EAAK,CACJrI,KAAMqJ,EAAMrJ,KACZgF,OAAQqE,EAAMrE,UAEZ,GAlBHqE,EAAMtE,IAsBdwG,IACG,KAjCCtM,EAoCJ,KAxCA6L,SA+CrBtF,cAACiD,EAAK,CAACC,MAAOA,IAAMI,EAAUhE,OAC1B,EC/IVkH,IAASC,OACPzG,cAAC0G,IAAMC,WAAU,CAAA5G,SACfC,cAACoD,EAAG,MAENwD,SAASC,eAAe,Q","file":"static/js/main.c14c71e8.chunk.js","sourcesContent":["import { Position } from \"./position\";\n\nexport enum PieceFill {\n  Black,\n  Red,\n}\n\nexport interface IPiece {\n  id: number;\n  fill: PieceFill;\n  position: Position | null;\n  isKing: boolean;\n}\n","export enum Position {\n  A8 = \"a8\",\n  B8 = \"b8\",\n  C8 = \"c8\",\n  D8 = \"d8\",\n  E8 = \"e8\",\n  F8 = \"f8\",\n  G8 = \"g8\",\n  H8 = \"h8\",\n  A7 = \"a7\",\n  B7 = \"b7\",\n  C7 = \"c7\",\n  D7 = \"d7\",\n  E7 = \"e7\",\n  F7 = \"f7\",\n  G7 = \"g7\",\n  H7 = \"h7\",\n  A6 = \"a6\",\n  B6 = \"b6\",\n  C6 = \"c6\",\n  D6 = \"d6\",\n  E6 = \"e6\",\n  F6 = \"f6\",\n  G6 = \"g6\",\n  H6 = \"h6\",\n  A5 = \"a5\",\n  B5 = \"b5\",\n  C5 = \"c5\",\n  D5 = \"d5\",\n  E5 = \"e5\",\n  F5 = \"f5\",\n  G5 = \"g5\",\n  H5 = \"h5\",\n  A4 = \"a4\",\n  B4 = \"b4\",\n  C4 = \"c4\",\n  D4 = \"d4\",\n  E4 = \"e4\",\n  F4 = \"f4\",\n  G4 = \"g4\",\n  H4 = \"h4\",\n  A3 = \"a3\",\n  B3 = \"b3\",\n  C3 = \"c3\",\n  D3 = \"d3\",\n  E3 = \"e3\",\n  F3 = \"f3\",\n  G3 = \"g3\",\n  H3 = \"h3\",\n  A2 = \"a2\",\n  B2 = \"b2\",\n  C2 = \"c2\",\n  D2 = \"d2\",\n  E2 = \"e2\",\n  F2 = \"f2\",\n  G2 = \"g2\",\n  H2 = \"h2\",\n  A1 = \"a1\",\n  B1 = \"b1\",\n  C1 = \"c1\",\n  D1 = \"d1\",\n  E1 = \"e1\",\n  F1 = \"f1\",\n  G1 = \"g1\",\n  H1 = \"h1\",\n}\n","import { Position } from \"./position\";\n\nexport enum SquareFill {\n  Dark,\n  Light,\n}\n\nexport interface ISquare {\n  fill: SquareFill;\n  position: Position;\n}\n","import { IPiece, PieceFill, Position } from \"../types\";\n\nconst encodeX = (x: number): string => \"abcdefgh\".split(\"\")[x];\n\nconst decodeX = (position: Position): number =>\n  \"abcdefgh\".split(\"\").indexOf(position.split(\"\")[0]);\n\nconst decodeY = (position: Position): number => Number(position.split(\"\")[1]);\n\nconst getCoordinates = (fromPosition: Position, toPosition: Position) => ({\n  from: {\n    x: decodeX(fromPosition),\n    y: decodeY(fromPosition),\n  },\n  to: {\n    x: decodeX(toPosition),\n    y: decodeY(toPosition),\n  },\n});\n\nconst getIsDescending = (from: number, to: number) => from > to;\n\nexport const validateMove = (\n  fromPosition: Position,\n  toPosition: Position,\n  movedPiece: IPiece\n): boolean => {\n  const { from, to } = getCoordinates(fromPosition, toPosition);\n\n  // can't move more than two positions\n  if (Math.abs(from.y - to.y) > 2) return false;\n\n  // must move diagonally\n  const isDiagonal = Math.abs(from.x - to.x) === Math.abs(from.y - to.y);\n  if (!isDiagonal) return false;\n\n  // evaluate king movement (can descend or ascend regardless of fill)\n  if (movedPiece.isKing) return true;\n\n  // evaluate non-king movement (black descends / red ascends)\n  const yIsDescending = getIsDescending(from.y, to.y);\n  return movedPiece.fill === PieceFill.Black ? yIsDescending : !yIsDescending;\n};\n\nexport const getJumpedPosition = (\n  fromPosition: Position,\n  toPosition: Position\n): Position | null => {\n  const { from, to } = getCoordinates(fromPosition, toPosition);\n\n  if (Math.abs(from.y - to.y) !== 2) return null;\n\n  const x = encodeX((from.x + to.x) / 2);\n  const y = (from.y + to.y) / 2;\n  return `${x}${y}` as Position;\n};\n\nexport const getIsKing = (\n  toPosition: Position,\n  movedPiece: IPiece\n): boolean => {\n  const toY = decodeY(toPosition);\n  if (movedPiece.fill === PieceFill.Black) return toY === 1;\n  return toY === 8;\n};\n","import { Position, SquareFill } from \"../types\";\n\nexport const makeDarkSquare = (position: Position) => ({\n  fill: SquareFill.Dark,\n  position,\n});\n\nexport const makeLightSquare = (position: Position) => ({\n  fill: SquareFill.Light,\n  position,\n});\n","import { IPiece, PieceFill } from \"../types\";\n\ninterface IPieceWithoutFill extends Omit<IPiece, \"fill\"> {}\n\nexport const makeRedPiece = (attributes: IPieceWithoutFill): IPiece => ({\n  fill: PieceFill.Red,\n  ...attributes,\n});\n\nexport const makeBlackPiece = (attributes: IPieceWithoutFill): IPiece => ({\n  fill: PieceFill.Black,\n  ...attributes,\n});\n","import { Position, TBoardRow, TBoard } from \"../types\";\nimport { makeDarkSquare, makeLightSquare } from \"../utils\";\n\nconst makeEvenRow = (positions: Position[]): TBoardRow => [\n  makeLightSquare(positions[0]),\n  makeDarkSquare(positions[1]),\n  makeLightSquare(positions[2]),\n  makeDarkSquare(positions[3]),\n  makeLightSquare(positions[4]),\n  makeDarkSquare(positions[5]),\n  makeLightSquare(positions[6]),\n  makeDarkSquare(positions[7]),\n];\n\nconst makeOddRow = (positions: Position[]): TBoardRow => [\n  makeDarkSquare(positions[0]),\n  makeLightSquare(positions[1]),\n  makeDarkSquare(positions[2]),\n  makeLightSquare(positions[3]),\n  makeDarkSquare(positions[4]),\n  makeLightSquare(positions[5]),\n  makeDarkSquare(positions[6]),\n  makeLightSquare(positions[7]),\n];\n\nexport const board: TBoard = [\n  makeEvenRow([\n    Position.A8,\n    Position.B8,\n    Position.C8,\n    Position.D8,\n    Position.E8,\n    Position.F8,\n    Position.G8,\n    Position.H8,\n  ]),\n  makeOddRow([\n    Position.A7,\n    Position.B7,\n    Position.C7,\n    Position.D7,\n    Position.E7,\n    Position.F7,\n    Position.G7,\n    Position.H7,\n  ]),\n  makeEvenRow([\n    Position.A6,\n    Position.B6,\n    Position.C6,\n    Position.D6,\n    Position.E6,\n    Position.F6,\n    Position.G6,\n    Position.H6,\n  ]),\n  makeOddRow([\n    Position.A5,\n    Position.B5,\n    Position.C5,\n    Position.D5,\n    Position.E5,\n    Position.F5,\n    Position.G5,\n    Position.H5,\n  ]),\n  makeEvenRow([\n    Position.A4,\n    Position.B4,\n    Position.C4,\n    Position.D4,\n    Position.E4,\n    Position.F4,\n    Position.G4,\n    Position.H4,\n  ]),\n  makeOddRow([\n    Position.A3,\n    Position.B3,\n    Position.C3,\n    Position.D3,\n    Position.E3,\n    Position.F3,\n    Position.G3,\n    Position.H3,\n  ]),\n  makeEvenRow([\n    Position.A2,\n    Position.B2,\n    Position.C2,\n    Position.D2,\n    Position.E2,\n    Position.F2,\n    Position.G2,\n    Position.H2,\n  ]),\n  makeOddRow([\n    Position.A1,\n    Position.B1,\n    Position.C1,\n    Position.D1,\n    Position.E1,\n    Position.F1,\n    Position.G1,\n    Position.H1,\n  ]),\n];\n","import { IPiece, Position } from \"../types\";\nimport { makeBlackPiece, makeRedPiece } from \"../utils\";\n\nexport const INITIAL_PIECE_COUNT_PER_TEAM = 12;\n\nexport const initialPieces: IPiece[] = [\n  /*\n   *  black pieces\n   */\n  makeBlackPiece({\n    id: 1,\n    position: Position.B8,\n    isKing: false,\n  }),\n  makeBlackPiece({\n    id: 2,\n    position: Position.D8,\n    isKing: false,\n  }),\n  makeBlackPiece({\n    id: 3,\n    position: Position.F8,\n    isKing: false,\n  }),\n  makeBlackPiece({\n    id: 4,\n    position: Position.H8,\n    isKing: false,\n  }),\n  makeBlackPiece({\n    id: 5,\n    position: Position.A7,\n    isKing: false,\n  }),\n  makeBlackPiece({\n    id: 6,\n    position: Position.C7,\n    isKing: false,\n  }),\n  makeBlackPiece({\n    id: 7,\n    position: Position.E7,\n    isKing: false,\n  }),\n  makeBlackPiece({\n    id: 8,\n    position: Position.G7,\n    isKing: false,\n  }),\n  makeBlackPiece({\n    id: 9,\n    position: Position.B6,\n    isKing: false,\n  }),\n  makeBlackPiece({\n    id: 10,\n    position: Position.D6,\n    isKing: false,\n  }),\n  makeBlackPiece({\n    id: 11,\n    position: Position.H6,\n    isKing: false,\n  }),\n  makeBlackPiece({\n    id: 12,\n    position: Position.F6,\n    isKing: false,\n  }),\n  /*\n   *  red pieces\n   */\n  makeRedPiece({\n    id: 13,\n    position: Position.A3,\n    isKing: false,\n  }),\n  makeRedPiece({\n    id: 14,\n    position: Position.C3,\n    isKing: false,\n  }),\n  makeRedPiece({\n    id: 15,\n    position: Position.E3,\n    isKing: false,\n  }),\n  makeRedPiece({\n    id: 16,\n    position: Position.G3,\n    isKing: false,\n  }),\n  makeRedPiece({\n    id: 17,\n    position: Position.B2,\n    isKing: false,\n  }),\n  makeRedPiece({\n    id: 18,\n    position: Position.D2,\n    isKing: false,\n  }),\n  makeRedPiece({\n    id: 19,\n    position: Position.F2,\n    isKing: false,\n  }),\n  makeRedPiece({\n    id: 20,\n    position: Position.H2,\n    isKing: false,\n  }),\n  makeRedPiece({\n    id: 21,\n    position: Position.A1,\n    isKing: false,\n  }),\n  makeRedPiece({\n    id: 22,\n    position: Position.C1,\n    isKing: false,\n  }),\n  makeRedPiece({\n    id: 23,\n    position: Position.E1,\n    isKing: false,\n  }),\n  makeRedPiece({\n    id: 24,\n    position: Position.G1,\n    isKing: false,\n  }),\n];\n","import { INITIAL_PIECE_COUNT_PER_TEAM } from \"../constants\";\n\ninterface IScoreProps {\n  countBlack: number;\n  countRed: number;\n}\n\nconst Score = ({ countBlack, countRed }: IScoreProps) => (\n  <div className=\"row mb-3 text-center\">\n    <div className=\"col-6\">\n      <strong>Black:</strong> {INITIAL_PIECE_COUNT_PER_TEAM - countRed}\n    </div>\n    <div className=\"col-6\">\n      <strong>Red:</strong> {INITIAL_PIECE_COUNT_PER_TEAM - countBlack}\n    </div>\n  </div>\n);\n\nexport default Score;\n","import styled from \"styled-components\";\n\nexport const BoardContainer = styled.div`\n  margin: 0 auto;\n  max-height: 80vh;\n  max-width: 80vh;\n`;\n\nexport const BoardRow = styled.div`\n  align-items: stretch;\n  display: flex;\n  width: 100%;\n`;\n","import {\n  RefObject,\n  MutableRefObject,\n  useRef,\n  useCallback,\n  useLayoutEffect,\n} from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nexport const useResizeObserver = (\n  ref: RefObject<any> | MutableRefObject<any>,\n  callback: ResizeObserverCallback\n): void => {\n  const ro = useRef<ResizeObserver | null>(null);\n\n  const observe = useCallback(() => {\n    ro.current = new ResizeObserver(callback);\n    if (ref.current) ro.current.observe(ref.current);\n  }, [callback, ref]);\n\n  const disconnect = useCallback(() => ro.current?.disconnect(), []);\n\n  useLayoutEffect(() => {\n    observe();\n    return () => disconnect();\n  }, [observe, disconnect]);\n};\n","import { RefObject, MutableRefObject, useState, useCallback } from \"react\";\nimport { useResizeObserver } from \"./useResizeObserver\";\n\nconst emptyRect: ClientRect = {\n  width: 0,\n  height: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n};\n\nexport const useRect = (\n  ref: RefObject<any> | MutableRefObject<any>\n): ClientRect => {\n  const [rect, setRect] = useState<ClientRect>(emptyRect);\n\n  const handleResize = useCallback(() => {\n    if (ref.current) setRect(ref.current.getBoundingClientRect());\n  }, [ref]);\n\n  useResizeObserver(ref, handleResize);\n\n  return rect;\n};\n","import { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useRect } from \"../hooks\";\nimport { ISquare, SquareFill } from \"../types\";\n\ninterface ISquareProps extends Pick<ISquare, \"fill\"> {}\n\nconst Square: React.FC<ISquareProps> = ({ fill, children }) => {\n  const wrapperRef = useRef(null);\n  const { width: minHeight } = useRect(wrapperRef);\n  const isDarkFill = fill === SquareFill.Dark;\n  const backgroundColor = isDarkFill ? \"cornsilk\" : \"light\";\n\n  return (\n    <Wrapper ref={wrapperRef} style={{ minHeight, backgroundColor }}>\n      {isDarkFill ? children : null}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  margin-top: 1px;\n  margin-right: 1px;\n  outline: 1px solid lightgray;\n  position: relative;\n  width: 12.5%;\n`;\n\nexport default Square;\n","export default __webpack_public_path__ + \"static/media/black-king.24d5537d.png\";","export default __webpack_public_path__ + \"static/media/black.43b83621.png\";","export default __webpack_public_path__ + \"static/media/red-king.486dfc20.png\";","export default __webpack_public_path__ + \"static/media/red.43f6dfa7.png\";","import blackKingSrc from \"../images/piece/black-king.png\";\nimport blackSrc from \"../images/piece/black.png\";\nimport redKingSrc from \"../images/piece/red-king.png\";\nimport redSrc from \"../images/piece/red.png\";\nimport { IPiece, PieceFill } from \"../types\";\n\ninterface IPieceProps extends Pick<IPiece, \"fill\" | \"isKing\"> {}\n\nconst getSrc = ({ fill, isKing }: IPieceProps): string => {\n  if (fill === PieceFill.Black) return isKing ? blackKingSrc : blackSrc;\n  return isKing ? redKingSrc : redSrc;\n};\n\nconst Piece = (props: IPieceProps) => (\n  <div className=\"p-1\">\n    <img className=\"img-fluid\" src={getSrc(props)} alt=\"Piece\" />\n  </div>\n);\n\nexport default Piece;\n","interface IResetProps {\n  reset: () => void;\n}\n\nconst Reset = ({ reset }: IResetProps) => (\n  <div className=\"row mt-4 mb-2 text-center\">\n    <div className=\"col-12\">\n      <button className=\"btn btn-sm\" onClick={reset}>\n        Reset\n      </button>\n    </div>\n  </div>\n);\n\nexport default Reset;\n","import { useState } from \"react\";\nimport {\n  DropResult,\n  DragDropContext,\n  Droppable,\n  Draggable,\n} from \"react-beautiful-dnd\";\nimport { board, initialPieces } from \"../constants\";\nimport { Position, IPiece, PieceFill } from \"../types\";\nimport { validateMove, getJumpedPosition, getIsKing } from \"../utils\";\nimport Score from \"./Score\";\nimport { BoardContainer, BoardRow } from \"./board\";\nimport Square from \"./Square\";\nimport Piece from \"./Piece\";\nimport Reset from \"./Reset\";\n\n// TODO: better dnd (++a11y)\nconst App = () => {\n  /*\n   *  pieces\n   */\n  const [pieces, setPieces] = useState<IPiece[]>(initialPieces);\n\n  const countPieces = (fill: PieceFill) =>\n    pieces.filter((p) => p.fill === fill && p.position !== null).length;\n\n  const getPiece = (position: Position): IPiece | undefined =>\n    pieces.find((piece) => piece.position === position);\n\n  const updatePiece = (id: number, updates: Partial<Omit<IPiece, \"id\">>) =>\n    setPieces((currentPieces) => {\n      const currentPiece = currentPieces.find((p) => p.id === id)!;\n      return [\n        ...currentPieces.filter((p) => p.id !== id),\n        {\n          ...currentPiece,\n          ...updates,\n        },\n      ];\n    });\n\n  /*\n   *  moves\n   */\n  const handleMove = (result: DropResult) => {\n    if (!result.destination) return;\n\n    const fromPosition = result.source.droppableId as Position;\n    const toPosition = result.destination.droppableId as Position;\n    const movedPiece = getPiece(fromPosition)!;\n\n    /*\n     *  validate move\n     */\n    const moveIsValid = validateMove(fromPosition, toPosition, movedPiece);\n    if (!moveIsValid) return;\n\n    /*\n     *  prevent collisions\n     */\n    const collisionPiece = getPiece(toPosition);\n    if (collisionPiece) return;\n\n    /*\n     *  handle jump\n     */\n    const jumpedPosition = getJumpedPosition(fromPosition, toPosition);\n    const jumpedPiece = jumpedPosition && getPiece(jumpedPosition);\n    const jumpedPieceIsAnOpponent =\n      jumpedPiece && jumpedPiece.fill !== movedPiece.fill;\n\n    // can't jump an empty position\n    if (jumpedPosition && !jumpedPiece) return null;\n\n    // can't jump a teammate piece\n    if (jumpedPiece && !jumpedPieceIsAnOpponent) return null;\n\n    /*\n     *  update game\n     */\n    // update moved piece\n    updatePiece(movedPiece.id, {\n      position: toPosition,\n      isKing: movedPiece.isKing || getIsKing(toPosition, movedPiece),\n    });\n\n    // if jumped, then remove opponent piece\n    if (jumpedPiece && jumpedPieceIsAnOpponent) {\n      updatePiece(jumpedPiece.id, { position: null });\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"mt-4 mb-2 text-center\">Checkers</h1>\n      <Score\n        countBlack={countPieces(PieceFill.Black)}\n        countRed={countPieces(PieceFill.Red)}\n      />\n      <DragDropContext onDragEnd={handleMove}>\n        <BoardContainer>\n          {board.map((row, rowIdx) => (\n            <BoardRow key={rowIdx}>\n              {row.map(({ position, ...square }) => {\n                const piece = getPiece(position);\n                return (\n                  <Square key={position} fill={square.fill}>\n                    <Droppable droppableId={position} isDropDisabled={!!piece}>\n                      {({\n                        innerRef: droppableInnerRef,\n                        droppableProps,\n                        placeholder: droppablePlaceholder,\n                      }) => (\n                        <div ref={droppableInnerRef} {...droppableProps}>\n                          {piece && (\n                            <Draggable\n                              key={piece.id}\n                              draggableId={String(piece.id)}\n                              index={0}\n                            >\n                              {({\n                                innerRef: draggableInnerRef,\n                                draggableProps,\n                                dragHandleProps,\n                              }) => (\n                                <div\n                                  ref={draggableInnerRef}\n                                  {...draggableProps}\n                                  {...dragHandleProps}\n                                >\n                                  <Piece\n                                    fill={piece.fill}\n                                    isKing={piece.isKing}\n                                  />\n                                </div>\n                              )}\n                            </Draggable>\n                          )}\n                          {droppablePlaceholder}\n                        </div>\n                      )}\n                    </Droppable>\n                  </Square>\n                );\n              })}\n            </BoardRow>\n          ))}\n        </BoardContainer>\n      </DragDropContext>\n      <Reset reset={() => setPieces(initialPieces)} />\n    </div>\n  );\n};\n\nexport default App;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"focus-visible\";\nimport \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}